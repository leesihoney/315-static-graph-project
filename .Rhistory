colnames(segregated_short_five) <- c("Segregated")
colnames(all_short_five) <- c("All")
pnL_dataframe_five <- merge(segregated_short_five, all_short_five, by=0, all=TRUE)
colnames(pnL_dataframe_five) <- c("Date","Segregated","All")
pnL_dataframe_five$Date <- factor(pnL_dataframe_five$Date)
segregated_short_seven <- read.table("PnL(Short_Seven_5,10,20)", header = TRUE, sep = "\t")
all_short_seven <- read.table("PnL(Short_Seven_All_5,10,20)", header = TRUE, sep = "\t")
colnames(segregated_short_seven) <- c("Segregated")
colnames(all_short_seven) <- c("All")
pnL_dataframe_seven <- merge(segregated_short_five, all_short_five, by=0, all=TRUE)
colnames(pnL_dataframe_seven) <- c("Date","Segregated","All")
pnL_dataframe_seven$Date <- factor(pnL_dataframe_seven$Date)
segregated_short_ten <- read.table("PnL(Short_Ten_7,20,30)", header = TRUE, sep = "\t")
all_short_ten <- read.table("PnL(Short_Ten_All_7,20,30)", header = TRUE, sep = "\t")
colnames(segregated_short_ten) <- c("Segregated")
colnames(all_short_ten) <- c("All")
pnL_dataframe_ten <- merge(segregated_short_ten, all_short_ten, by=0, all=TRUE)
colnames(pnL_dataframe_ten) <- c("Date","Segregated","All")
pnL_dataframe_ten$Date <- factor(pnL_dataframe_ten$Date)
pnL_dataframe_all <- merge(all_short_five, all_short_seven, by=0, all=TRUE)
pnL_dataframe_all <- merge(pnL_dataframe_all, all_short_ten, by=0, all=TRUE)
colnames(pnL_dataframe_all) <- c("Date","Short 5","Short 7","Short 10")
pnL_dataframe_all$Date <- factor(pnL_dataframe_all$Date)
View(pnL_dataframe_all)
pnL_dataframe_all <- merge(all_short_five, all_short_seven,all_short_ten,by=0, all=TRUE)
colnames(pnL_dataframe_all) <- c("Date","Short 5","Short 7","Short 10")
pnL_dataframe_all$Date <- factor(pnL_dataframe_all$Date)
help("merge")
pnL_dataframe_all <- merge(all_short_five, all_short_seven,by=0, all=TRUE)
colnames(pnL_dataframe_all) <- c("Date","Short 5","Short 7")
pnL_dataframe_all$Date <- factor(pnL_dataframe_all$Date)
View(pnL_dataframe_all)
pnL_dataframe_all <- merge(all_short_five, all_short_seven,by=0, all=TRUE)
row.names(pnL_dataframe_all) <- pnL_dataframe_all$Date
pnL_dataframe_all[,1] <- NULL
pnL_dataframe_all <- merge(pnL_dataframe_all, all_short_ten,by=0, all=TRUE)
colnames(pnL_dataframe_all) <- c("Date","Short 5","Short 7","Short 10")
pnL_dataframe_all$Date <- factor(pnL_dataframe_all$Date)
View(pnL_dataframe_all)
library(tidyverse)
library(reshape2)
require(plyr)
View(pnL_dataframe_all)
pnL_dataframe_all <- merge(all_short_five, all_short_seven,by=0, all=TRUE)
row.names(pnL_dataframe_all) <- pnL_dataframe_all$Date
View(pnL_dataframe_all)
pnL_dataframe_all <- merge(all_short_five, all_short_seven,by=0, all=TRUE)
rownames(pnL_dataframe_all) <- pnL_dataframe_all$Date
View(pnL_dataframe_all)
row.names(pnL_dataframe_all)
pnL_dataframe_all$Date
pnL_dataframe_all <- merge(all_short_five, all_short_seven,by=0, all=TRUE)
row.names(pnL_dataframe_all) <- pnL_dataframe_all[,1]
pnL_dataframe_all[,1] <- NULL
pnL_dataframe_all <- merge(pnL_dataframe_all, all_short_ten,by=0, all=TRUE)
colnames(pnL_dataframe_all) <- c("Date","Short 5","Short 7","Short 10")
pnL_dataframe_all$Date <- factor(pnL_dataframe_all$Date)
pnL_dataframe_segregated <- merge(segregated_short_five, segregated_short_seven, by=0, all=TRUE)
row.names(pnL_dataframe_segregated) <- pnL_dataframe_segregated[,1]
pnL_dataframe_segregated[,1] <- NULL
pnL_dataframe_segregated <- merge(pnL_dataframe_segregated, all_short_ten,by=0, all=TRUE)
colnames(pnL_dataframe_segregated) <- c("Date","Short 5","Short 7","Short 10")
pnL_dataframe_segregated$Date <- factor(pnL_dataframe_segregated$Date)
View(pnL_dataframe_segregated)
pnL_dataframe_long <- melt(pnL_dataframe_all, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (All)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_all, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (All)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_all, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (All)",
x="Date", y="PnL") + scale_y_continuous() + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly")) + scale_y_continuous(limits=c(-0.0005,0.0005))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) +
guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) +
guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) +
guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_segregated, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (Segregated)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_segregated[1223:nrow(pnL_dataframe),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_segregated[1223:nrow(pnL_dataframe_segregated),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_segregated[1223:nrow(pnL_dataframe_segregated),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly")) +
scale_y_continuous(limits=c(-0.0005,0.0005))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_segregated[1223:nrow(pnL_dataframe_segregated),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + guides(color =guide_legend(title="Fly")) +
scale_y_continuous(limits=c(-0.0001,0.0001))
pnL_dataframe_long <- melt(pnL_dataframe_segregated, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (Segregated)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_segregated, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL according to Fly (Segregated)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0001,0.0001)) + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_segregated, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.9) + labs(title = "Plot of PnL according to Fly (Segregated)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0001,0.0001)) + guides(color =guide_legend(title="Fly"))
pnL_dataframe_long <- melt(pnL_dataframe_segregated, id="Date")
ggplot(data=pnL_dataframe_long,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.5) + labs(title = "Plot of PnL according to Fly (Segregated)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0001,0.0001)) + guides(color =guide_legend(title="Fly"))
#After 2010
pnL_dataframe_long_post_2010 <- melt(pnL_dataframe_all[1223:nrow(pnL_dataframe_all),], id="Date")
ggplot(data=pnL_dataframe_long_post_2010,
aes(x=as.Date(Date), y=value, colour=variable)) +
geom_line(alpha = 0.7) + labs(title = "Plot of PnL (Post Financial Crisis)",
x="Date", y="PnL") + scale_y_continuous(limits=c(-0.0005,0.0005)) +
guides(color =guide_legend(title="Fly"))
remove(list = ls())
setwd("~/Documents/GitHub/315-static-graph-project")
library(tidyverse)
suicide_data <- read.csv("suicide-dataset.csv")
dim(suicide_data)
nrow(suicide_data)
ncol(suicide_data)
View(suicide_data)
data(UKfaculty)
library(tidyverse)
library(igraph)
library(igraphdata)
data(UKfaculty)
library(tidyverse)
library(igraph)
library(igraphdata)
library(dendextend)
#Plan: Shall just look at 2015--> Look at the weighted average suicide rates and make a dendrogram plot based-off that
suicides.2015 <- suicide_data[which(suicide_data$year == 2015),]
View(suicides.2015)
unique(suicide.2015$country)
unique(suicides.2015$country)
country_list <- unique(suicides.2015$country)
country_list[1]
country_list[2]
length(country_list)
curr.country <- country_list[1]
curr.country.data <- suicides.2015[which(suicides.2015$country == curr.country),]
View(curr.country.data)
sum(curr.country.data$population)/100000*sum(curr.country.data$suicides.100k.pop)
sum(curr.country.data$population/100000)*sum(curr.country.data$suicides.100k.pop)
curr.country.data$population/100000*curr.country.data$suicides.100k.pop
curr.country.data$population/100000
#Plan: Shall just look at 2015--> Look at the weighted average suicide rates and make a dendrogram plot based-off that
suicides.2015 <- suicide_data[which(suicide_data$year == 2015),]
country_list <- unique(suicides.2015$country)
country.suicides.2015 <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- suicides.2015[which(suicides.2015$country == curr.country),]
curr.suicide.rate <-  sum(curr.country.data$population/100000*curr.country.data$suicides.100k.pop)
curr.data.frame <- data.frame(Country = curr.country, Rate = curr.suicide.rate)
country.suicides.2015 <- rbind(country.suicides.2015,curr.data.frame)
}
curr.data.frame
country.suicides.2015
#Plan: Shall just look at 2015--> Look at the weighted average suicide rates and make a dendrogram plot based-off that
suicides.2015 <- suicide_data[which(suicide_data$year == 2015),]
country_list <- unique(suicides.2015$country)
country.suicides.2015 <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- suicides.2015[which(suicides.2015$country == curr.country),]
curr.suicide.rate <-  sum(curr.country.data$population/100000*curr.country.data$suicides.100k.pop)
curr.data.frame <- data.frame(Country = curr.country, Rate = curr.suicide.rate)
country.suicides.2015 <- rbind(country.suicides.2015,curr.data.frame)
}
country.suicides.2015 <- as.data.frame(country.suicides.2015)
View(country.suicides.2015)
#Plan: Shall just look at 2015--> Look at the weighted average suicide rates and make a dendrogram plot based-off that
suicides.2015 <- suicide_data[which(suicide_data$year == 2015),]
country_list <- unique(suicides.2015$country)
country.suicides.2015 <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- suicides.2015[which(suicides.2015$country == curr.country),]
curr.suicide.rate <-  sum(curr.country.data$population/100000*curr.country.data$suicides.100k.pop)
curr.data.frame <- data.frame(Country = curr.country, Rate = curr.suicide.rate)
country.suicides.2015 <- rbind(country.suicides.2015,curr.data.frame)
}
View(country.suicides.2015)
help(dendrogram)
dend <- as.dendrogram(country.suicides.2015)
dend <- dendrogram(country.suicides.2015)
distance<-dist(country.suicides.2015)
distance
view(distance)
test <- data.frame(distance)
hc.m<-hclust(distance)
plot(hc.m, labels=matrix$Sample, main ="", cex.main=0.8, cex.lab= 1.1)
plot(hc.m)
ggplot(hc.m)
clusters <- hclust(dist(country.suicides.2015))
clusterCut <- cutree(clusters, 3)
table(clusterCut, country.suicides.2015$Country)
ggplot(clusters, horiz = T)
dend <- country.suicides.2015 %>% scale %>% dist %>% hclust %>% as.dendrogram
ggplot(dend, horiz = T)
dend <- country.suicides.2015$Rate %>% scale %>% dist %>% hclust %>% as.dendrogram
ggplot(dend, horiz = T)
dend
install.packages("geonames")
library(geonames)
GNcountryInfo(curr.country)
map_data("world")
test <- map_data(curr.country)
test <- map_data("USA")
help(map_data)
states <- map_data("state")
View(states)
states <- map_data("country")
states <- map_data("world")
View(states)
states <- map_data("cities")
states <- map_data("capitals")
states <- map_data("world2")
View(states)
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- average(curr.country.data$lat)
curr.avg.long <- average(curr.country.data$long)
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long)
country_cords <- rbind(country_cords, curr.dist)
}
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long)
country_cords <- rbind(country_cords, curr.dist)
}
View(country_cords)
View(country_cords)
View(countries)
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),3])
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long)
country_cords <- rbind(country_cords, curr.dist)
}
#Manually fill in entries not found
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Republic of Korea'),3] <- mean(countries[which(countries$region == "South Korea"),3])
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),3])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
country_cords[which(country_cords$Country == 'Russian Federation'),2] <- mean(countries[which(countries$region == "Russia"),2])
country_cords[which(country_cords$Country == 'Russian Federation'),3] <- mean(countries[which(countries$region == "Russia"),3])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),2] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),2])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),3] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),3])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),2] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),2])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),3] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),3])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),2] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),2])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),3] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),3])
View(country_cords)
help(merge)
all.suicides.2015.data <- merge(country.suicides.2015,country_cords, by = intersect("Country", "Country"))
View(all.suicides.2015.data)
clusters <- hclust(dist(all.suicides.2015.data))
clusterCut <- cutree(clusters, 3)
table(clusterCut, country.suicides.2015$Country)
dend <- country.suicides.2015$Rate %>% scale %>% dist %>% hclust %>% as.dendrogram
ggplot(dend, horiz = T)
dend <- country.suicides.2015$Rate %>% scale %>% dist %>% hclust %>% as.dendrogram
ggplot(dend, horiz = F)
View(countries)
View(countries)
View(country_cords)
View(country_cords)
View(countries)
mean(countries[which(countries$region == "South Korea"),2]
)
mean(countries[which(countries$region == "South Korea"),3])
mean(countries[which(countries$region == "South Korea"),4])
mean(countries[which(countries$region == "South Korea"),5])
countries[which(countries$region == "South Korea"),3]
countries[which(countries$region == "South Korea"),]
test <- countries[which(countries$region == "South Korea"),]
View(test)
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.avg.grp <- mean(curr.country.data$group)
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long, group = curr.avg.grp)
country_cords <- rbind(country_cords, curr.dist)
}
#Manually fill in entries not found
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Republic of Korea'),3] <- mean(countries[which(countries$region == "South Korea"),1])
country_cords[which(country_cords$Country == 'Republic of Korea'),4] <- mean(countries[which(countries$region == "South Korea"),3])
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),1])
country_cords[which(country_cords$Country == 'United States'),4] <- mean(countries[which(countries$region == "USA"),3])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),1])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),4] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
country_cords[which(country_cords$Country == 'Russian Federation'),2] <- mean(countries[which(countries$region == "Russia"),2])
country_cords[which(country_cords$Country == 'Russian Federation'),3] <- mean(countries[which(countries$region == "Russia"),1])
country_cords[which(country_cords$Country == 'Russian Federation'),4] <- mean(countries[which(countries$region == "Russia"),3])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),2] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),2])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),3] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),1])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),4] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),3])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),2] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),2])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),3] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),1])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),4] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),3])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),2] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),2])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),3] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),1])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),4] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),3])
View(country_cords)
View(test)
median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.avg.grp <- median(curr.country.data$group)
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long, group = curr.avg.grp)
country_cords <- rbind(country_cords, curr.dist)
}
#Manually fill in entries not found
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Republic of Korea'),3] <- mean(countries[which(countries$region == "South Korea"),1])
country_cords[which(country_cords$Country == 'Republic of Korea'),4] <- median(countries[which(countries$region == "South Korea"),3])
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),1])
country_cords[which(country_cords$Country == 'United States'),4] <- median(countries[which(countries$region == "USA"),3])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),1])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),4] <- median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
country_cords[which(country_cords$Country == 'Russian Federation'),2] <- mean(countries[which(countries$region == "Russia"),2])
country_cords[which(country_cords$Country == 'Russian Federation'),3] <- mean(countries[which(countries$region == "Russia"),1])
country_cords[which(country_cords$Country == 'Russian Federation'),4] <- median(countries[which(countries$region == "Russia"),3])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),2] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),2])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),3] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),1])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),4] <- median(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),3])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),2] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),2])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),3] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),1])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),4] <- median(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),3])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),2] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),2])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),3] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),1])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),4] <- median(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),3])
median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3])
integer(median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3]))
round(median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3]))
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.avg.grp <- round(median(curr.country.data$group))
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long, group = curr.avg.grp)
country_cords <- rbind(country_cords, curr.dist)
}
#Manually fill in entries not found
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Republic of Korea'),3] <- mean(countries[which(countries$region == "South Korea"),1])
country_cords[which(country_cords$Country == 'Republic of Korea'),4] <- round(median(countries[which(countries$region == "South Korea"),3]))
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),1])
country_cords[which(country_cords$Country == 'United States'),4] <- round(median(countries[which(countries$region == "USA"),3]))
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),1])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),4] <- round(median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3]))
country_cords[which(country_cords$Country == 'Russian Federation'),2] <- mean(countries[which(countries$region == "Russia"),2])
country_cords[which(country_cords$Country == 'Russian Federation'),3] <- mean(countries[which(countries$region == "Russia"),1])
country_cords[which(country_cords$Country == 'Russian Federation'),4] <- round(median(countries[which(countries$region == "Russia"),3]))
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),2] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),2])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),3] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),1])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),4] <- round(median(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),3]))
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),2] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),2])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),3] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),1])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),4] <- round(median(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),3]))
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),2] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),2])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),3] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),1])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),4] <- round(median(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),3]))
countries <- map_data("world2")
country_list <- unique(suicide_data$country)
country_cords <- data.frame()
for (i in 1:length(country_list)){
curr.country <- country_list[i]
curr.country.data <- countries[which(countries$region == curr.country),]
curr.avg.lat <- mean(curr.country.data$lat)
curr.avg.long <- mean(curr.country.data$long)
curr.avg.grp <- round(median(curr.country.data$group))
curr.dist <- data.frame(Country = curr.country, Lat = curr.avg.lat, long =  curr.avg.long, group = curr.avg.grp)
country_cords <- rbind(country_cords, curr.dist)
}
#Manually fill in entries not found
country_cords[which(country_cords$Country == 'Republic of Korea'),2] <- mean(countries[which(countries$region == "South Korea"),2])
country_cords[which(country_cords$Country == 'Republic of Korea'),3] <- mean(countries[which(countries$region == "South Korea"),1])
country_cords[which(country_cords$Country == 'Republic of Korea'),4] <- round(median(countries[which(countries$region == "South Korea"),3]))
country_cords[which(country_cords$Country == 'United States'),2] <- mean(countries[which(countries$region == "USA"),2])
country_cords[which(country_cords$Country == 'United States'),3] <- mean(countries[which(countries$region == "USA"),1])
country_cords[which(country_cords$Country == 'United States'),4] <- round(median(countries[which(countries$region == "USA"),3]))
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),2] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),2])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),3] <- mean(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),1])
country_cords[which(country_cords$Country == 'Trinidad and Tobago'),4] <- round(median(countries[which(countries$region == "Trinidad" | countries$region == "Tobago"),3]))
country_cords[which(country_cords$Country == 'Russian Federation'),2] <- mean(countries[which(countries$region == "Russia"),2])
country_cords[which(country_cords$Country == 'Russian Federation'),3] <- mean(countries[which(countries$region == "Russia"),1])
country_cords[which(country_cords$Country == 'Russian Federation'),4] <- round(median(countries[which(countries$region == "Russia"),3]))
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),2] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),2])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),3] <- mean(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),1])
country_cords[which(country_cords$Country == 'Saint Kitts and Nevis'),4] <- round(median(countries[which(countries$region == "Saint Kitts" | countries$region == "Nevis"),3]))
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),2] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),2])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),3] <- mean(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),1])
country_cords[which(country_cords$Country == 'Saint Vincent and Grenadines'),4] <- round(median(countries[which(countries$region == "Saint Vincent" | countries$region == "Grenadines"),3]))
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),2] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),2])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),3] <- mean(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),1])
country_cords[which(country_cords$Country == 'Antigua and Barbuda'),4] <- round(median(countries[which(countries$region == "Antigua" | countries$region == "Barbuda"),3]))
